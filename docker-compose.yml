services:
  webapp:
    image: php:8.3-fpm-alpine
    container_name: webapp
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    env_file:
      - .env   # explicitly load the .env file
    environment:
      - DB_DRIVER=${DB_DRIVER}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - app_network
    depends_on:
      - db
    ports:
      - "8080:80"
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - .:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app_network
    ports:
      - "80:80"

  db:
    image: ${DB_DRIVER}
    container_name: database
    env_file:
      - .env   # explicitly load the .env file
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql    # For MySQL
      - pg_data:/var/lib/postgresql/data    # For PostgreSQL
    ports:
      - "3306:3306" # MySQL
      - "5432:5432" # PostgreSQL
    networks:
      - app_network

  smtp:
    image: mailhog/mailhog
    container_name: smtp
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  db_data:      # MySQL data storage
  pg_data:      # PostgreSQL data storage
